{"version":3,"file":"static/js/835.350ddff1.chunk.js","mappings":"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","sources":["components/FormStyle.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/App.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/UpdateModalForm/UpdateModalForm.jsx","components/ContactItem/ContactItem.material.jsx","components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsSection/ContactsSection.jsx","pages/Contacts.jsx","redux/contacts/selectors.js","redux/filter/selectors.js","../node_modules/@mui/icons-material/AddCircle.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nimport bgImgHomePage from 'images/bg-02.webp';\n\nexport const UserForm = styled(Form)`\n  max-width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  padding: 55px 55px 37px;\n  background: transparent;\n\n  margin: 0 auto;\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  color: #c6c6c6;\n  font-size: 16px;\n  font-weight: 500;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: all 300ms ease;\n`;\n\nexport const FormInput = styled(Field)`\n  background: none;\n  color: #fff68f;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 3px solid #c6c6c6;\n  :focus {\n    outline: none;\n  }\n  :focus ~ label,\n  :valid ~ label {\n    top: -14px;\n    font-size: 12px;\n    color: #fff68f;\n  }\n  :focus ~ span:before {\n    width: 100%;\n  }\n`;\n\n// Registration and Login Form\n\nexport const FormRegLog = styled(Form)`\n  max-width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  padding: 55px 55px 37px;\n  background: #9152f8;\n  background-image: url(${bgImgHomePage});\n  margin: 0 auto;\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const InputLabelBox = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n`;\n\nexport const LabelRegLog = styled.label`\n  color: #c6c6c6;\n  font-size: 16px;\n  font-weight: 500;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: all 300ms ease;\n`;\n\nexport const InputRegLog = styled(Field)`\n  background: none;\n  color: #fff68f;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 3px solid #c6c6c6;\n  :focus {\n    outline: none;\n  }\n  :focus ~ label,\n  :valid ~ label {\n    top: -14px;\n    font-size: 12px;\n    color: #fff68f;\n  }\n  :focus ~ span:before {\n    width: 100%;\n  }\n`;\nexport const Bar = styled.span`\n  position: relative;\n  display: block;\n  width: 100%;\n  &:before {\n    content: '';\n    height: 3px;\n    width: 0;\n    bottom: 0px;\n    position: absolute;\n    background: #fff68f;\n    transition: 300ms ease all;\n    left: 0%;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  font-weight: 700;\n  color: #ffffff;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\nexport const Error = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n`;\n","import styled from '@emotion/styled';\nimport bgimg from 'images/bg-01.jpg';\n\nexport const TitleBox = styled.div`\n  display: flex;\n`;\nexport const SectionBox = styled.section`\n  margin: 0 auto;\n  display: flex;\n\n  align-items: center;\n  padding: 40px 0px;\n  min-height: 810px;\n  background-image: url(${bgimg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    transition: background-color 250ms linear;\n    background-color: ${({ theme }) => {\n      switch (theme.palette.mode) {\n        case 'light':\n          return 'rgba(255, 255, 255, 0.9)';\n\n        case 'dark':\n          return 'rgba(75, 73, 73, 0.9)';\n\n        default:\n          return 'rgba(255, 255, 255, 0.9)';\n      }\n    }};\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n","import { useTheme } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { SectionBox, Title, TitleBox } from './Section.styled';\n\nexport function Section({ title, children }) {\n  const theme = useTheme();\n  return (\n    <SectionBox theme={theme}>\n      <TitleBox>\n        <Title>{title}</Title>\n      </TitleBox>\n      {children}\n    </SectionBox>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const ChildrenBox = styled.div`\n  height: 810px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 30px;\n  max-width: 700px;\n`;\n\nexport const Notification = styled.p`\n  padding: 20px 40px;\n  font: 20px;\n  border-radius: 5px;\n  border: 1px solid red;\n  color: red;\n  margin-bottom: 20px;\n`;\n\nexport const Figure = styled.figure`\n  $unit: 60vmin;\n  margin-left: 2em;\n  height: 1.43 * $unit;\n  width: $unit;\n  line-height: 1.43 * $unit;\n  border-width: $unit/20;\n  border-radius: $unit/14;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), #111),\n    url(https://www.apple.com/v/ipad-pro/s/images/overview/retina_screen_1__csuokryyjb42_large.jpg);\n  z-index: 100;\n  display: block;\n  /* color: #fff; */\n  text-align: center;\n  font-family: 'SF Pro Display', Helvetica Neue, Arial, sans-serif;\n  letter-spacing: -0.022em;\n  font-size: 2.5vmin;\n  text-shadow: 0 0 0.5em #000;\n  background-color: #000;\n  background-size: auto 200%, cover;\n  background-repeat: no-repeat, no-repeat;\n  border: solid #111;\n  margin-bottom: 2em;\n  position: relative;\n  box-shadow: 0 0.5em 2em 0.2em rgba(0, 0, 0, 0.33), 0 0 0 0.5px #000 inset;\n  transition: all 0.1s linear, line-height 0s linear;\n  background-position: 50% 100%, center;\n  transform-origin: bottom center;\n  &:hover,\n  :focus {\n    /* color: transparent; */\n    text-shadow: 0 0 0em transparent;\n    background-position: 50% -100%, center center;\n    transition: all 0.15s linear, line-height 5s linear;\n    box-shadow: 0 0.5em 3em 0.25em rgba(0, 0, 0, 0.33), 0 0 0 1px #000 inset;\n    transform: scale(1.0025);\n    /* line-height: 0vmin; */\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  UserForm,\n  InputBox,\n  Label,\n  FormInput,\n  Error,\n  Bar,\n} from 'components/FormStyle.styled';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { failureNameNotify, failureNumberNotify } from 'utils/notification';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).max(30).trim().required(),\n  number: yup.string().min(12).max(13).trim().required(),\n});\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const addNewContact = obj => {\n    const findName = contacts.find(\n      ({ name }) => name.toLowerCase() === obj.name.toLowerCase()\n    );\n    const findNumber = contacts.find(\n      ({ number }) => number.toLowerCase() === obj.number.toLowerCase()\n    );\n\n    if (findName) {\n      failureNameNotify(findName);\n      return;\n    }\n    if (findNumber) {\n      failureNumberNotify(findNumber);\n      return;\n    }\n\n    dispatch(addContact(obj));\n  };\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    addNewContact(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={initialValue}\n      onSubmit={handleFormSubmit}\n    >\n      <UserForm>\n        <InputBox>\n          <FormInput\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <Bar />\n          <Label htmlFor={nameInputId}>Name</Label>\n          <Error name=\"name\" component=\"p\" />\n        </InputBox>\n\n        <InputBox>\n          <FormInput\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Bar />\n          <Label htmlFor={numberInputId}>Number</Label>\n          <Error name=\"number\" component=\"p\" />\n        </InputBox>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            transitionProperty: 'all',\n            transitionDuration: '250ms',\n            transitionTimingFunction: 'linear',\n          }}\n          endIcon={<AddCircleIcon fontSize=\"large\" />}\n        >\n          Add\n        </Button>\n      </UserForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 5px;\n  align-items: center;\n  font-size: 12px;\n  @media screen and (min-width: 600px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 900px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  padding: 5px;\n  background-color: ${({ theme }) =>\n    theme.palette.mode === 'dark' ? 'transparent' : '#FFFFFF'};\n  background-image: linear-gradient(to right, rgb(0 0 0 / 0.15), transparent);\n  transform-style: preserve-3d;\n\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap: 0.5rem;\n  column-gap: 2rem;\n\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n  ::before {\n    --ry: -1;\n    right: 100%;\n    --side-rotate: 60deg;\n    content: '';\n    position: absolute;\n    top: 0;\n    height: 100%;\n    width: 70px;\n\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n    transform-origin: calc(50% - (50% * var(--ry))) 50%;\n    transform: rotateY(calc(var(--side-rotate) * var(--ry)));\n    background-color: inherit;\n    background-image: linear-gradient(\n      calc(90deg * var(--ry)),\n      rgb(0 0 0 / 0.25),\n      rgb(0 0 0 / 0.5)\n    );\n    box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n      0 2px 2px rgba(0, 0, 0, 0.12);\n  }\n  ::after {\n    --ry: 1;\n    left: 100%;\n    --side-rotate: 60deg;\n    content: '';\n    position: absolute;\n    top: 0;\n    height: 100%;\n    width: 70px;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    transform-origin: calc(50% - (50% * var(--ry))) 50%;\n    transform: rotateY(calc(var(--side-rotate) * var(--ry)));\n    background-color: inherit;\n    background-image: linear-gradient(\n      calc(90deg * var(--ry)),\n      rgb(0 0 0 / 0.25),\n      rgb(0 0 0 / 0.5)\n    );\n    box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n      0 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\nexport const ItemLetter = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #bdbdbd;\n  padding: 5px;\n`;\n\nexport const Letter = styled.p`\n  width: 100%;\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n`;\n","import PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Modal from '@mui/material/Modal';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { LoaderBtn } from 'components/Loader/Loader';\nimport { Formik } from 'formik';\nimport Button from '@mui/material/Button';\n\nimport {\n  Error,\n  FormInput,\n  InputBox,\n  Label,\n  UserForm,\n} from 'components/FormStyle.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).max(30).trim().required(),\n  number: yup.string().min(12).max(13).trim().required(),\n});\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport function UpdateModalForm({ id, name, number }) {\n  const [editBtnId, setEditBtnId] = useState(0);\n  const [isEdit, setIsEdit] = useState(false);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setEditBtnId(id);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  const editedContact = value => {\n    setIsEdit(true);\n    dispatch(\n      editContact({\n        id: editBtnId,\n        value: { name: value.name, number: value.number },\n      })\n    )\n      .unwrap()\n      .finally(() => setIsEdit(false));\n    setOpen(false);\n  };\n\n  const handleSubmitEditsContact = (values, { resetForm }) => {\n    editedContact(values);\n    resetForm();\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"edits\"\n        size=\"medium\"\n        onClick={handleOpen}\n        sx={{\n          fontSize: { xs: '16px', sm: '18px', md: '20px' },\n          ':hover': {\n            backgroundColor: 'green',\n            color: 'white',\n          },\n          ':focus': {\n            backgroundColor: 'green',\n            color: 'white',\n          },\n          transitionProperty: 'all',\n\n          transitionDuration: '250ms',\n          transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        }}\n      >\n        {!isEdit && <EditIcon fontSize=\"inherit\" />}\n        {isEdit && editBtnId === id && <LoaderBtn />}\n      </IconButton>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Formik\n            validationSchema={schema}\n            initialValues={{ name, number }}\n            onSubmit={handleSubmitEditsContact}\n          >\n            {({ values }) => (\n              <UserForm>\n                <InputBox>\n                  <Label htmlFor={nameInputId}>Name</Label>\n                  <FormInput\n                    id={nameInputId}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={values.name}\n                  />\n                  <Error name=\"name\" component=\"p\" />\n                </InputBox>\n\n                <InputBox>\n                  <Label htmlFor={numberInputId}>Number</Label>\n                  <FormInput\n                    id={numberInputId}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={values.number}\n                  />\n                  <Error name=\"number\" component=\"p\" />\n                </InputBox>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  endIcon={<EditIcon fontSize=\"inherit\" />}\n                >\n                  Edit\n                </Button>\n              </UserForm>\n            )}\n          </Formik>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nUpdateModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nexport const Text = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n\n  transition: 'color 250ms linear',\n  maxWidth: '600px',\n  color: theme.palette.mode === 'dark' ? 'white' : 'black',\n}));\n\nexport const TelLink = styled(Link)(({ theme }) => ({\n  textDecoration: 'none',\n  padding: '5px',\n  borderRadius: '5px',\n  transition: 'background-color 250ms linear, color 250ms linear',\n  color: theme.palette.mode === 'dark' ? 'white' : 'black',\n  ':hover': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#512da8' : '#e1bee7',\n  },\n  ':focus': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#512da8' : '#e1bee7',\n  },\n}));\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  ContainerBtn,\n  ContainerItem,\n  Item,\n  ItemLetter,\n  Letter,\n} from './ContactItem.styled';\nimport { BiUser } from 'react-icons/bi';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { LoaderBtn } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { UpdateModalForm } from 'components/UpdateModalForm/UpdateModalForm';\nimport { TelLink, Text } from './ContactItem.material';\nimport { useTheme } from '@emotion/react';\n\nexport function ContactItem({ bool, id, name, number }) {\n  const theme = useTheme();\n  const [deleteBtnId, setDeleteBtnId] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n\n  const onBtnDeleteClick = id => {\n    setDeleteBtnId(id);\n    setIsDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .finally(() => setIsDeleting(false));\n  };\n\n  return (\n    <>\n      {bool && (\n        <ItemLetter>\n          <Letter>{name.slice(0, 1)}</Letter>\n        </ItemLetter>\n      )}\n      <Item theme={theme}>\n        <ContainerItem>\n          <BiUser\n            style={{\n              fontSize: 'inherit',\n              transition: ' color 250ms linear',\n              color: theme.palette.mode === 'dark' ? 'white' : 'black',\n            }}\n          />\n          <Text sx={{ fontSize: { xs: '10px', sm: '12px', md: '14px' } }}>\n            {name}:\n          </Text>\n          <TelLink\n            sx={{ fontSize: { xs: '10px', sm: '12px', md: '14px' } }}\n            href={`tel:${number}`}\n          >\n            {number}\n          </TelLink>\n          <ContainerBtn>\n            <IconButton\n              aria-label=\"delete\"\n              size=\"medium\"\n              onClick={() => {\n                onBtnDeleteClick(id);\n              }}\n              disabled={isDeleting}\n              sx={{\n                fontSize: { xs: '16px', sm: '18px', md: '20px' },\n                ':hover': { color: 'white', backgroundColor: 'red' },\n                ':focus': { color: 'white', backgroundColor: 'red' },\n                transitionProperty: 'all',\n                transitionDuration: '250ms',\n                transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n              }}\n            >\n              {!isDeleting && <DeleteIcon fontSize=\"inherit\" />}\n              {isDeleting && deleteBtnId === id && <LoaderBtn />}\n            </IconButton>\n            <UpdateModalForm id={id} name={name} number={number} />\n          </ContainerBtn>\n        </ContainerItem>\n      </Item>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","const { createSelector } = require('@reduxjs/toolkit');\nconst { selectContacts } = require('redux/contacts/selectors');\nconst { selectFilter } = require('redux/filter/selectors');\n\nexport const selectSortContacts = createSelector([selectContacts], contacts =>\n  [...contacts].sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  })\n);\nexport const selectFilterContacts = createSelector(\n  [selectFilter, selectSortContacts],\n  (filter, contacts) =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-height: 810px;\n  width: min(100%, 60rem);\n  overflow: auto;\n  margin-inline: auto;\n  padding-inline: clamp(1rem, 5vw, 4rem);\n  list-style: none;\n  perspective: 1000px;\n  display: grid;\n  row-gap: 0.5rem;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { useMemo } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const getFilteredContacts = useSelector(selectFilterContacts);\n\n  const firstLetterArr = useMemo(() => {\n    return getFilteredContacts\n      .map(item => item.name.slice(0, 1))\n      .map((item, index, array) => array.indexOf(item) === index);\n  }, [getFilteredContacts]);\n\n  return (\n    <List>\n      {getFilteredContacts.map((contact, idx) => {\n        return (\n          <ContactItem\n            key={contact.id}\n            bool={firstLetterArr[idx]}\n            {...contact}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const FilterBox = styled.div`\n  position: relative;\n  text-align: center;\n  width: 100%;\n  background-image: url('./images/bg-01.jpg');\n`;\n\nexport const IconSearch = styled(BiSearchAlt)`\n  position: absolute;\n  top: 10px;\n  left: 5px;\n  color: grey;\n`;\n\nexport const FilterLabel = styled.label``;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 1.25rem 2rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { FilterBox, FilterInput, FilterLabel } from './Filter.styled';\n\nimport { IconSearch } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\n\nconst filterInputId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    dispatch(filterContacts(e.target.value.trim()));\n  };\n\n  return (\n    <FilterBox>\n      <IconSearch size={25} />\n      <FilterLabel\n        aria-label=\"find contacts by name\"\n        htmlFor={filterInputId}\n      ></FilterLabel>\n      <FilterInput\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search...\"\n        onChange={handleFilterChange}\n      />\n    </FilterBox>\n  );\n};\n","import { ChildrenBox, Notification } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { errorNotify } from 'utils/notification';\nimport Container from '@mui/material/Container';\nimport bgImgHomePage from 'images/bg-02.webp';\n\nexport default function ContactsSection() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!error) return;\n    errorNotify(error);\n  }, [error]);\n  return (\n    <Section title=\"Contacts\">\n      <Container maxWidth=\"xl\">\n        <Container\n          sx={{\n            padding: '30px 0',\n            display: {\n              xs: 'flex',\n            },\n            flexDirection: { xs: 'column', md: 'row' },\n            justifyContent: { md: 'center' },\n            alignItems: { xs: 'center' },\n            gap: '50px',\n            backgroundImage: `url(${bgImgHomePage})`,\n            borderRadius: '10px',\n          }}\n        >\n          <ContactForm />\n          {contacts.length ? (\n            <ChildrenBox>\n              <Filter />\n              <ContactList />\n            </ChildrenBox>\n          ) : (\n            <Notification>There are no contacts in the phone book</Notification>\n          )}\n          {isLoading && !error && <Loader />}\n        </Container>\n      </Container>\n    </Section>\n  );\n}\n","import ContactsSection from 'components/ContactsSection/ContactsSection';\n\nexport default function Contacts() {\n  return (\n    <main>\n      <ContactsSection />\n    </main>\n  );\n}\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["UserForm","styled","Form","InputBox","Label","FormInput","Field","FormRegLog","bgImgHomePage","InputLabelBox","LabelRegLog","InputRegLog","Bar","Title","Error","ErrorMessage","TitleBox","SectionBox","bgimg","theme","palette","mode","Section","title","children","useTheme","ChildrenBox","Notification","schema","yup","shape","name","min","max","trim","required","number","nameInputId","nanoid","numberInputId","initialValue","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","validationSchema","initialValues","onSubmit","values","resetForm","obj","findName","find","toLowerCase","findNumber","failureNameNotify","failureNumberNotify","addContact","addNewContact","id","type","pattern","htmlFor","component","Button","variant","size","sx","transitionProperty","transitionDuration","transitionTimingFunction","endIcon","AddCircle","fontSize","ContainerItem","Item","ItemLetter","Letter","ContainerBtn","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","UpdateModalForm","useState","editBtnId","setEditBtnId","isEdit","setIsEdit","open","setOpen","IconButton","onClick","xs","sm","md","backgroundColor","color","Edit","Loader","Modal","onClose","Box","value","editContact","unwrap","finally","Text","Typography","display","alignItems","justifyContent","transition","maxWidth","TelLink","Link","textDecoration","padding","borderRadius","ContactItem","bool","deleteBtnId","setDeleteBtnId","isDeleting","setIsDeleting","slice","href","deleteContact","onBtnDeleteClick","disabled","Delete","createSelector","require","selectFilter","selectSortContacts","sort","a","b","localeCompare","selectFilterContacts","filter","item","includes","List","ContactList","getFilteredContacts","firstLetterArr","useMemo","map","index","array","indexOf","contact","idx","FilterBox","IconSearch","BiSearchAlt","FilterLabel","FilterInput","filterInputId","Filter","placeholder","onChange","e","filterContacts","target","ContactsSection","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","errorNotify","Container","flexDirection","gap","backgroundImage","length","Contacts","state","items","selectIsDeleting","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}