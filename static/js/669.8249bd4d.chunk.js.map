{"version":3,"file":"static/js/669.8249bd4d.chunk.js","mappings":"uNAGaA,EAAWC,EAAAA,EAAAA,IAAH,0CAGRC,EAAaD,EAAAA,EAAAA,QAAH,ieAOGE,GAeF,YAClB,OADiC,EAAZC,MACPC,QAAQC,MACpB,IAAK,QAML,QACE,MAAO,2BAJT,IAAK,OACH,MAAO,wBAKZ,IAIQC,EAAQN,EAAAA,EAAAA,GAAH,2N,UCvCX,SAASO,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzBN,GAAQO,EAAAA,EAAAA,KACd,OACE,UAACT,EAAD,CAAYE,MAAOA,EAAnB,WACE,SAACJ,EAAD,WACE,SAACO,EAAD,UAAQE,MAETC,IAGN,C,gHCVM,SAASE,IACd,OACE,SAACJ,EAAA,EAAD,CAASC,MAAM,YAAf,UACE,SAACI,EAAA,EAAD,CACEC,SAAS,KACTC,GAAI,CACFC,gBAAgB,OAAD,OAASC,EAAT,KACfC,MAAO,SACPC,OAAQ,QACRC,aAAc,WAKvB,CChBc,SAASC,IACtB,OACE,2BACE,SAACT,EAAD,KAGL,C,2BCMKC,GAAYS,E,QAAAA,KA4ClB,K","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/HomePage/HomePage.jsx","pages/Home.jsx","../node_modules/@mui/system/esm/Container/Container.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport bgimg from 'images/bg-01.jpg';\n\nexport const TitleBox = styled.div`\n  display: flex;\n`;\nexport const SectionBox = styled.section`\n  margin: 0 auto;\n  display: flex;\n\n  align-items: center;\n  padding: 20px 0px;\n  height: 100vh;\n  background-image: url(${bgimg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: ${({ theme }) => {\n      switch (theme.palette.mode) {\n        case 'light':\n          return 'rgba(255, 255, 255, 0.9)';\n\n        case 'dark':\n          return 'rgba(75, 73, 73, 0.9)';\n\n        default:\n          return 'rgba(255, 255, 255, 0.9)';\n      }\n    }};\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n","import { useTheme } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { SectionBox, Title, TitleBox } from './Section.styled';\n\nexport function Section({ title, children }) {\n  const theme = useTheme();\n  return (\n    <SectionBox theme={theme}>\n      <TitleBox>\n        <Title>{title}</Title>\n      </TitleBox>\n      {children}\n    </SectionBox>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { Container } from '@mui/system';\nimport { Section } from 'components/Section/Section';\nimport bgImgHomePage from 'images/bg-02.webp';\n\nexport function Homepage() {\n  return (\n    <Section title=\"Home page\">\n      <Container\n        maxWidth=\"xl\"\n        sx={{\n          backgroundImage: `url(${bgImgHomePage})`,\n          width: '1000px',\n          height: '700px',\n          borderRadius: '10px',\n        }}\n      ></Container>\n    </Section>\n  );\n}\n","import { Homepage } from 'components/HomePage/HomePage';\n\nexport default function Home() {\n  return (\n    <main>\n      <Homepage />\n    </main>\n  );\n}\n","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["TitleBox","styled","SectionBox","bgimg","theme","palette","mode","Title","Section","title","children","useTheme","Homepage","Container","maxWidth","sx","backgroundImage","bgImgHomePage","width","height","borderRadius","Home","createContainer"],"sourceRoot":""}