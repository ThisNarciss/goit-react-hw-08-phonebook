{"version":3,"file":"static/js/501.37fbf946.chunk.js","mappings":"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","sources":["components/FormStyle.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/App.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/UpdateModalForm/UpdateModalForm.jsx","components/ContactItem/ContactItem.jsx","redux/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsSection/ContactsSection.jsx","pages/Contacts.jsx","redux/contacts/selectors.js","redux/filter/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const UserForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 0.3rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n\nexport const FormRegLog = styled(Form)`\n  max-width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  padding: 55px 55px 37px;\n  background: #9152f8;\n  background: -webkit-linear-gradient(top, #7579ff, #b224ef);\n  margin: 0 auto;\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const InputRegLog = styled(Field)`\n  display: block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 0.3rem 0.75rem;\n  margin: 10px auto;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n\nexport const LabelRegLog = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n`;\n","import styled from '@emotion/styled';\nimport bgimg from 'images/bg-01.jpg';\n\nexport const TitleBox = styled.div`\n  display: flex;\n`;\nexport const SectionBox = styled.section`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 0px;\n  background-image: url(${bgimg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionBox, Title, TitleBox } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <SectionBox>\n      <TitleBox>\n        <Title>{title}</Title>\n      </TitleBox>\n      {children}\n    </SectionBox>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const ChildrenBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  max-width: 450px;\n`;\n\nexport const Notification = styled.p`\n  padding: 20px 40px;\n  font: 20px;\n  border-radius: 5px;\n  border: 1px solid red;\n  color: red;\n  margin-bottom: 20px;\n`;\n\nexport const Figure = styled.figure`\n  $unit: 60vmin;\n  margin-left: 2em;\n  height: 1.43 * $unit;\n  width: $unit;\n  line-height: 1.43 * $unit;\n  border-width: $unit/20;\n  border-radius: $unit/14;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), #111),\n    url(https://www.apple.com/v/ipad-pro/s/images/overview/retina_screen_1__csuokryyjb42_large.jpg);\n  z-index: 100;\n  display: block;\n  /* color: #fff; */\n  text-align: center;\n  font-family: 'SF Pro Display', Helvetica Neue, Arial, sans-serif;\n  letter-spacing: -0.022em;\n  font-size: 2.5vmin;\n  text-shadow: 0 0 0.5em #000;\n  background-color: #000;\n  background-size: auto 200%, cover;\n  background-repeat: no-repeat, no-repeat;\n  border: solid #111;\n  margin-bottom: 2em;\n  position: relative;\n  box-shadow: 0 0.5em 2em 0.2em rgba(0, 0, 0, 0.33), 0 0 0 0.5px #000 inset;\n  transition: all 0.1s linear, line-height 0s linear;\n  background-position: 50% 100%, center;\n  transform-origin: bottom center;\n  &:hover {\n    /* color: transparent; */\n    text-shadow: 0 0 0em transparent;\n    background-position: 50% -100%, center center;\n    transition: all 0.15s linear, line-height 5s linear;\n    box-shadow: 0 0.5em 3em 0.25em rgba(0, 0, 0, 0.33), 0 0 0 1px #000 inset;\n    transform: scale(1.0025);\n    /* line-height: 0vmin; */\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  UserForm,\n  InputBox,\n  Label,\n  FormInput,\n  Error,\n} from 'components/FormStyle.styled';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { failureNameNotify, failureNumberNotify } from 'utils/notification';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).max(30).trim().required(),\n  number: yup.string().min(12).max(13).trim().required(),\n});\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const addNewContact = obj => {\n    const findName = contacts.find(\n      ({ name }) => name.toLowerCase() === obj.name.toLowerCase()\n    );\n    const findNumber = contacts.find(\n      ({ number }) => number.toLowerCase() === obj.number.toLowerCase()\n    );\n\n    if (findName) {\n      failureNameNotify(findName);\n      return;\n    }\n    if (findNumber) {\n      failureNumberNotify(findNumber);\n      return;\n    }\n\n    dispatch(addContact(obj));\n  };\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    addNewContact(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={initialValue}\n      onSubmit={handleFormSubmit}\n    >\n      <UserForm>\n        <InputBox>\n          <Label htmlFor={nameInputId}>Name</Label>\n          <FormInput\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <Error name=\"name\" component=\"p\" />\n        </InputBox>\n\n        <InputBox>\n          <Label htmlFor={numberInputId}>Number</Label>\n          <FormInput\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Error name=\"number\" component=\"p\" />\n        </InputBox>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            transitionProperty: 'all',\n\n            transitionDuration: '250ms',\n            transitionTimingFunction: 'linear',\n          }}\n          endIcon={<AddCircleIcon fontSize=\"large\" />}\n        >\n          Add\n        </Button>\n      </UserForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n  padding: 5px;\n`;\nexport const ItemLetter = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  background-color: #bdbdbd;\n  padding: 5px;\n`;\n\nexport const Text = styled.p``;\nexport const Letter = styled.p`\n  width: 100%;\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n`;\n","import PropTypes from 'prop-types';\nimport * as yup from 'yup';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Modal from '@mui/material/Modal';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { LoaderBtn } from 'components/Loader/Loader';\nimport { Formik } from 'formik';\nimport Button from '@mui/material/Button';\n\nimport {\n  Error,\n  FormInput,\n  InputBox,\n  Label,\n  UserForm,\n} from 'components/FormStyle.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).max(30).trim().required(),\n  number: yup.string().min(12).max(13).trim().required(),\n});\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport function UpdateModalForm({ id, name, number }) {\n  const [editBtnId, setEditBtnId] = useState(0);\n  const [isEdit, setIsEdit] = useState(false);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setEditBtnId(id);\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  const editedContact = value => {\n    setIsEdit(true);\n    dispatch(\n      editContact({\n        id: editBtnId,\n        value: { name: value.name, number: value.number },\n      })\n    )\n      .unwrap()\n      .finally(() => setIsEdit(false));\n    setOpen(false);\n  };\n\n  const handleSubmitEditsContact = (values, { resetForm }) => {\n    editedContact(values);\n    resetForm();\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"edits\"\n        size=\"medium\"\n        onClick={handleOpen}\n        sx={{\n          ':hover': {\n            backgroundColor: 'green',\n            color: 'white',\n          },\n          transitionProperty: 'all',\n\n          transitionDuration: '250ms',\n          transitionTimingFunction: 'linear',\n        }}\n      >\n        {!isEdit && <EditIcon fontSize=\"inherit\" />}\n        {isEdit && editBtnId === id && <LoaderBtn />}\n      </IconButton>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Formik\n            validationSchema={schema}\n            initialValues={{ name, number }}\n            onSubmit={handleSubmitEditsContact}\n          >\n            {({ values }) => (\n              <UserForm>\n                <InputBox>\n                  <Label htmlFor={nameInputId}>Name</Label>\n                  <FormInput\n                    id={nameInputId}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={values.name}\n                  />\n                  <Error name=\"name\" component=\"p\" />\n                </InputBox>\n\n                <InputBox>\n                  <Label htmlFor={numberInputId}>Number</Label>\n                  <FormInput\n                    id={numberInputId}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={values.number}\n                  />\n                  <Error name=\"number\" component=\"p\" />\n                </InputBox>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  endIcon={<EditIcon fontSize=\"inherit\" />}\n                >\n                  Edit\n                </Button>\n              </UserForm>\n            )}\n          </Formik>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nUpdateModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  ContainerBtn,\n  Item,\n  ItemLetter,\n  Text,\n  Letter,\n} from './ContactItem.styled';\nimport { BiUser } from 'react-icons/bi';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { LoaderBtn } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { UpdateModalForm } from 'components/UpdateModalForm/UpdateModalForm';\n\nexport function ContactItem({ bool, id, name, number }) {\n  const [deleteBtnId, setDeleteBtnId] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n\n  const onBtnDeleteClick = id => {\n    setDeleteBtnId(id);\n    setIsDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .finally(() => setIsDeleting(false));\n  };\n\n  return (\n    <>\n      {bool && (\n        <ItemLetter>\n          <Letter>{name.slice(0, 1)}</Letter>\n        </ItemLetter>\n      )}\n      <Item>\n        <BiUser size={20} />\n        <Text>\n          {name}: {number}\n        </Text>\n        <ContainerBtn>\n          <IconButton\n            aria-label=\"delete\"\n            size=\"medium\"\n            onClick={() => {\n              onBtnDeleteClick(id);\n            }}\n            disabled={isDeleting}\n            sx={{\n              ':hover': { color: 'white', backgroundColor: 'red' },\n              transitionProperty: 'all',\n\n              transitionDuration: '250ms',\n              transitionTimingFunction: 'linear',\n            }}\n          >\n            {!isDeleting && <DeleteIcon fontSize=\"inherit\" />}\n            {isDeleting && deleteBtnId === id && <LoaderBtn />}\n          </IconButton>\n          <UpdateModalForm id={id} name={name} number={number} />\n        </ContainerBtn>\n      </Item>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","const { createSelector } = require('@reduxjs/toolkit');\nconst { selectContacts } = require('redux/contacts/selectors');\nconst { selectFilter } = require('redux/filter/selectors');\n\nexport const selectSortContacts = createSelector([selectContacts], contacts =>\n  [...contacts].sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  })\n);\nexport const selectFilterContacts = createSelector(\n  [selectFilter, selectSortContacts],\n  (filter, contacts) =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n\n  flex-direction: column;\n  gap: 5px;\n\n  margin-bottom: 20px;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { useMemo } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const getFilteredContacts = useSelector(selectFilterContacts);\n\n  const firstLetterArr = useMemo(() => {\n    return getFilteredContacts\n      .map(item => item.name.slice(0, 1))\n      .map((item, index, array) => array.indexOf(item) === index);\n  }, [getFilteredContacts]);\n\n  return (\n    <List>\n      {getFilteredContacts.map((contact, idx) => {\n        return (\n          <ContactItem\n            key={contact.id}\n            bool={firstLetterArr[idx]}\n            {...contact}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const FilterBox = styled.div`\n  position: relative;\n  text-align: center;\n  width: 100%;\n  background-image: url('./images/bg-01.jpg');\n`;\n\nexport const IconSearch = styled(BiSearchAlt)`\n  position: absolute;\n  top: 10px;\n  left: 5px;\n  color: grey;\n`;\n\nexport const FilterLabel = styled.label``;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 1.25rem 2rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { FilterBox, FilterInput, FilterLabel } from './Filter.styled';\n\nimport { IconSearch } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filter/filterSlice';\n\nconst filterInputId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    dispatch(filterContacts(e.target.value.trim()));\n  };\n\n  return (\n    <FilterBox>\n      <IconSearch size={25} />\n      <FilterLabel\n        aria-label=\"find contacts by name\"\n        htmlFor={filterInputId}\n      ></FilterLabel>\n      <FilterInput\n        id={filterInputId}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search...\"\n        onChange={handleFilterChange}\n      />\n    </FilterBox>\n  );\n};\n","import { ChildrenBox, Notification } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { errorNotify } from 'utils/notification';\nimport Container from '@mui/material/Container';\n\nexport default function ContactsSection() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!error) return;\n    errorNotify(error);\n  }, [error]);\n  return (\n    <Container\n      sx={{\n        display: {\n          md: 'flex',\n          justifyContent: 'center',\n          alignItems: 'start',\n        },\n      }}\n    >\n      <Section title=\"Phonebook\">\n        <Container maxWidth=\"xl\">\n          <ContactForm />\n        </Container>\n      </Section>\n      <Section title=\"Contacts\">\n        <Container\n          maxWidth=\"xl\"\n          sx={{\n            display: {\n              xs: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              alignItems: 'center',\n            },\n          }}\n        >\n          {contacts.length ? (\n            <ChildrenBox>\n              <Filter />\n              <ContactList />\n            </ChildrenBox>\n          ) : (\n            <Notification>There are no contacts in the phone book</Notification>\n          )}\n          {isLoading && !error && <Loader />}\n        </Container>\n      </Section>\n    </Container>\n  );\n}\n","import ContactsSection from 'components/ContactsSection/ContactsSection';\n\nexport default function Contacts() {\n  return (\n    <main>\n      <ContactsSection />\n    </main>\n  );\n}\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsDeleting = state => state.contacts.isDeleting;\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filter;\n"],"names":["UserForm","styled","Form","InputBox","Label","FormInput","Field","FormRegLog","InputRegLog","LabelRegLog","Error","ErrorMessage","TitleBox","SectionBox","bgimg","Title","Section","title","children","ChildrenBox","Notification","schema","yup","shape","name","min","max","trim","required","number","nameInputId","nanoid","numberInputId","initialValue","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","validationSchema","initialValues","onSubmit","values","resetForm","obj","findName","find","toLowerCase","findNumber","failureNameNotify","failureNumberNotify","addContact","addNewContact","htmlFor","id","type","pattern","component","Button","variant","size","sx","transitionProperty","transitionDuration","transitionTimingFunction","endIcon","AddCircle","fontSize","Item","ItemLetter","Text","Letter","ContainerBtn","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","UpdateModalForm","useState","editBtnId","setEditBtnId","isEdit","setIsEdit","open","setOpen","IconButton","onClick","backgroundColor","color","Edit","Loader","Modal","onClose","Box","value","editContact","unwrap","finally","ContactItem","bool","deleteBtnId","setDeleteBtnId","isDeleting","setIsDeleting","slice","deleteContact","onBtnDeleteClick","disabled","Delete","createSelector","require","selectFilter","selectSortContacts","sort","a","b","localeCompare","selectFilterContacts","filter","item","includes","List","ContactList","getFilteredContacts","firstLetterArr","useMemo","map","index","array","indexOf","contact","idx","FilterBox","IconSearch","BiSearchAlt","FilterLabel","FilterInput","filterInputId","Filter","placeholder","onChange","e","filterContacts","target","ContactsSection","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","errorNotify","Container","display","md","justifyContent","alignItems","maxWidth","xs","flexDirection","length","Contacts","state","items","selectIsDeleting"],"sourceRoot":""}