{"version":3,"file":"static/js/236.2c4be367.chunk.js","mappings":"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","sources":["components/FormStyle.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@mui/system/esm/Container/Container.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nimport bgImgHomePage from 'images/bg-02.webp';\n\nexport const UserForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 0.3rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  :focus {\n    color: #212529;\n    background-color: #fff;\n    border-color: #bdbdbd;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n  }\n`;\n\n// Registration and Login Form\n\nexport const FormRegLog = styled(Form)`\n  max-width: 500px;\n  border-radius: 10px;\n  overflow: hidden;\n  padding: 55px 55px 37px;\n  background: #9152f8;\n  background-image: url(${bgImgHomePage});\n  margin: 0 auto;\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08),\n    0 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const InputLabelBox = styled.div`\n  position: relative;\n  margin-bottom: 35px;\n`;\n\nexport const LabelRegLog = styled.label`\n  color: #c6c6c6;\n  font-size: 16px;\n  font-weight: 500;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: all 300ms ease;\n`;\n\nexport const InputRegLog = styled(Field)`\n  background: none;\n  color: #fff68f;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 3px solid #c6c6c6;\n  :focus {\n    outline: none;\n  }\n  :focus ~ label,\n  :valid ~ label {\n    top: -14px;\n    font-size: 12px;\n    color: #fff68f;\n  }\n  :focus ~ span:before {\n    width: 100%;\n  }\n`;\nexport const Bar = styled.span`\n  position: relative;\n  display: block;\n  width: 100%;\n  &:before {\n    content: '';\n    height: 3px;\n    width: 0;\n    bottom: 0px;\n    position: absolute;\n    background: #fff68f;\n    transition: 300ms ease all;\n    left: 0%;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 32px;\n  font-weight: 700;\n  color: #ffffff;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\nexport const Error = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n`;\n","import styled from '@emotion/styled';\nimport bgimg from 'images/bg-01.jpg';\n\nexport const TitleBox = styled.div`\n  display: flex;\n`;\nexport const SectionBox = styled.section`\n  margin: 0 auto;\n  display: flex;\n\n  align-items: center;\n  padding: 20px 0px;\n  height: 100vh;\n  background-image: url(${bgimg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: ${({ theme }) => {\n      switch (theme.palette.mode) {\n        case 'light':\n          return 'rgba(255, 255, 255, 0.9)';\n\n        case 'dark':\n          return 'rgba(75, 73, 73, 0.9)';\n\n        default:\n          return 'rgba(255, 255, 255, 0.9)';\n      }\n    }};\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n","import { useTheme } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { SectionBox, Title, TitleBox } from './Section.styled';\n\nexport function Section({ title, children }) {\n  const theme = useTheme();\n  return (\n    <SectionBox theme={theme}>\n      <TitleBox>\n        <Title>{title}</Title>\n      </TitleBox>\n      {children}\n    </SectionBox>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { nanoid } from 'nanoid';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/operations';\nimport Button from '@mui/material/Button';\nimport { Section } from 'components/Section/Section';\nimport { Container } from '@mui/system';\nimport {\n  Bar,\n  Error,\n  FormRegLog,\n  InputLabelBox,\n  InputRegLog,\n  LabelRegLog,\n  Title,\n} from 'components/FormStyle.styled';\nimport { Formik } from 'formik';\nimport { BiRegistered } from 'react-icons/bi';\n\nconst nameId = nanoid();\nconst emailId = nanoid();\nconst passwordId = nanoid();\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).max(30).trim().required(),\n  email: yup.string().trim().required(),\n  password: yup.string().min(7).trim().required(),\n});\n\nconst initialValue = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const registeredUser = values => {\n    dispatch(registerUser(values));\n  };\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    registeredUser(values);\n    resetForm();\n  };\n  return (\n    <Section title=\"Sign Up\">\n      <Container maxWidth=\"xl\">\n        <Formik\n          validationSchema={schema}\n          initialValues={initialValue}\n          onSubmit={handleFormSubmit}\n        >\n          <FormRegLog>\n            <BiRegistered\n              size={100}\n              style={{\n                color: 'white',\n                textAlign: 'center',\n                marginBottom: '5px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            />\n            <Title>Registration</Title>\n            <InputLabelBox>\n              <InputRegLog type=\"text\" name=\"name\" id={nameId} required />\n              <Bar />\n              <LabelRegLog htmlFor={nameId}>Name</LabelRegLog>\n              <Error name=\"name\" component=\"p\" />\n            </InputLabelBox>\n            <InputLabelBox>\n              <InputRegLog type=\"email\" name=\"email\" id={emailId} required />\n              <Bar />\n              <LabelRegLog htmlFor={emailId}>Email</LabelRegLog>\n              <Error name=\"email\" component=\"p\" />\n            </InputLabelBox>\n            <InputLabelBox>\n              <InputRegLog\n                type=\"password\"\n                name=\"password\"\n                id={passwordId}\n                required\n              />\n              <Bar />\n              <LabelRegLog htmlFor={passwordId}>Password</LabelRegLog>\n              <Error name=\"password\" component=\"p\" />\n            </InputLabelBox>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{\n                fontFamily: 'monospace',\n                fontWeight: '700',\n                letterSpacing: '1px',\n              }}\n            >\n              Register\n            </Button>\n          </FormRegLog>\n        </Formik>\n      </Container>\n    </Section>\n  );\n}\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <main>\n      <RegisterForm />\n    </main>\n  );\n}\n","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["UserForm","styled","Form","InputBox","Label","FormInput","Field","FormRegLog","bgImgHomePage","InputLabelBox","LabelRegLog","InputRegLog","Bar","Title","Error","ErrorMessage","TitleBox","SectionBox","bgimg","theme","palette","mode","Section","title","children","useTheme","nameId","nanoid","emailId","passwordId","schema","yup","shape","name","min","max","trim","required","email","password","initialValue","RegisterForm","dispatch","useDispatch","Container","maxWidth","validationSchema","initialValues","onSubmit","values","resetForm","registerUser","registeredUser","size","style","color","textAlign","marginBottom","marginLeft","marginRight","type","id","htmlFor","component","Button","variant","sx","fontFamily","fontWeight","letterSpacing","Register","createContainer"],"sourceRoot":""}